<box xs="10" class="offset-xs-1" vertical>
  <hbox fit>
    <h1>Configuration</h1>
    <hbox align="center" justify="end">
      <span>Next {{#link-to 'docs.layouts-overview'}} Layouts{{/link-to}}</span>
    </hbox>
  </hbox>

  <p>
    Flexi comes ready to go, but if you want to know where and what you can adjust
    read on below.
  </p>

  <p>
    The default blueprint will install `config/flexi.js` with the
    <a href="https://github.com/runspired/flexi/blob/develop/blueprints/flexi/files/config/flexi.js">
      default settings
    </a>.
  </p>

  <h3>Settings</h3>
  {{code-snippet name="settings-1.js"}}

  <h3>config.columns</h3>
  <p>
    The total number of columns you want Flexi to generate or your CSS framework
    provides. This is used by Flexi when generating the grid, and used when
    validating the values of layout attributes discovered at build time.
  </p>

  <h3>config.columnPrefix</h3>
  <p>
    By default, flexi generates a grid identical to bootstrap's to make converting
    or interop seamless.  See {{#link-to 'faq.css-frameworks'}}configuring Flexi
    to work with your CSS framework or grid of choice{{/link-to}}.
  </p>
  <p>
    This setting allows you to configure the structure of the generated grid class
    names.
  </p>

  <h3>config.includeMediaCSS</h3>
  <p>
    If false, @media based responsive utilities and grid classes will not be generated.
    @container based utilities and grid classes will still be generated.
  </p>

  <h3>config.includeElementCSS</h3>
  <p>
    If you have no desire to use layout elements, set this to false.
  </p>
  <p>
    If false, default element styles will not be included, this includes the styles
    for <strong>&lt;container&gt;&lt;/container&gt;</strong>. Since all layout elements are entirely
    implemented via CSS, this will cause all layout elements to cease functioning
    unless new CSS is provided for them.
  </p>
  <p>
    You will want to replicate the CSS for <strong>&lt;container&gt;&lt;/container&gt;</strong> or
    rely entirely on the `flexi/mixins/container` mixin for implementing @container
    support.
  </p>

  <h3>config.transformAllElementLayoutAttributes</h3>
  <p>
    By default, only layout attributes present on elements provided by flexi will
    be processed at build time and converted to classes. Set this to `true` to have
    all elements in your templates be processed.
  </p>

  <h3>config.gutterPadding</h3>
  <p>
    Grid columns will have half of this padding applied to left and right respectively.
  </p>

  <h3>config.includeCSS</h3>
  <p>
    Set to false if you want absolutely no styles to be included in your app from Flexi.
    This trumps other CSS settings, and results in layout elements and responsive layout
    attributes not working unless alternative CSS is provided.
  </p>

  <h3>config.breakpoints</h3>
  <p>
    Your config must have a `breakpoints` array.  This array determines what layout names
    are valid for layout handlebars files, when those layouts are activated, what layout
    attribute shorthands are available, what @container breakpoints are available, and what
    booleans are available on the device/layout service.
  </p>
  <p>
    A breakpoint has the structure:
  </p>
  {{code-snippet name="settings-2.js"}}

  <h3>breakpoint.name</h3>

  <p>
    `name` will be used for blueprint generation of layout names, and is made available as an `is[Name]`
    boolean on the `device/layout` service.
  </p>

  <h3>breakpoint.begin</h3>
  <p>
    `begin` is the pixel value at which the breakpoint becomes valid if equal to or larger than.
    All breakpoints must define begin, and your smallest breakpoint should begin at 0. Two breakpoints
    should not have the same value for begin.
  </p>
  <p>
    A breakpoint will be considered valid from it's begin up to the begin of the next largest
    breakpoint.
  </p>
  <p>
    Your breakpoints will be sorted and ordered automatically based on begin.
  </p>

  <h3>breakpoint.prefix</h3>
  <p>
    The breakpoint prefix is used when generating class names and layout
    attribute decorators.  For the breakpoint defined above, the `xs` prefix
    would enable the following shorthand layout syntax (where n is a column number).
  </p>

  {{code-snippet name="settings-html-1.js" language="hbs"}}

  This shorthand gets expanded to the following classes which are automatically
  generated by Flexi.

  {{code-snippet name="settings-html-2.js" language="hbs"}}

  The following responsive utilities are made available for each prefix:

  {{code-snippet name="settings-css-1.js" language="css"}}

  <p>
    `.col-xs-1` ... `.col-xs-n` will be valid class names (if `columnPrefix` is set to `col`).
  </p>

</box>